1.注册自己的账号
2. fork老师的的项目
3. 克隆自己的项目
4. 进入项目文件夹
5.在homework 下建立自己名字的文件夹，并添加readme.md文件。
6.git add -A 
7.git commit -m"提交到历史区"
8.git push origin master 提交到 github上


 1)如果是一个空的文件夹或者是一个空的文件是上传不上去的
  2)如果出现这两个信息说明，当前本地的git还没有注册
    git config --global user.email "...."
    git config --global user.name "...."
    解决办法:
    $ git config --global user.email "你的邮箱(建议和你们的github注册邮箱保持一致)"
    $ git config --global user.name "你的名字(建议和github用户名保持一致)"


1.注册自己的账号
2. fork老师的的项目
3. 克隆自己的项目
4. 进入项目文件夹
5.在homework 下建立自己名字的文件夹，并添加readme.md文件。
6.git add -A 
7.git commit -m"提交到历史区"
8.git push origin master 提交到 github上
9.发起一个pull request
10.老师合并代码



 1)如果是一个空的文件夹或者是一个空的文件是上传不上去的
  2)如果出现这两个信息说明，当前本地的git还没有注册
    git config --global user.email "...."
    git config --global user.name "...."
    解决办法:
    $ git config --global user.email "你的邮箱(建议和你们的github注册邮箱保持一致)"
    $ git config --global user.name "你的名字(建议和github用户名保持一致)"


 git remote add teacher(自定义变量） https://github.com/zhufengnodejs/201508node.git
git pull teacher master
git push origin master

git pull origin master

git push origin master


一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。
通常都是些自动生成的文件，像是日志或者编译过程中创建的等等。我们可以创建一个名为 .gitignore 的文件，
列出要忽略的文件模式，
4.配置说明
以斜杠“/”开头表示目录；
以星号“*”通配多个字符；
以问号“?”通配单个字符
以方括号“[]”包含单个字符的匹配列表；
以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；

.[ab] 任何以a和b结尾的文件
.css 以js结尾的文件
*.css 以js结尾的文件
!index.js 除了index.js都可以忽略
\!index.js 文件名为!index.js

先 add ，再commit 再push




#本机Host文件保存地址
C:\windows\System32\drivers\etc\HOSTS



查询端口：netstat -anto | findstr "8080"


全部提交：
git commit -a   --  .q 在新窗口按 insert,随意输入然后回车，之后.wq!--回车
